format = "$time$shell${custom.machine_architecture}$hostname$username$jobs$all$directory$git_status$character"
right_format = "$battery$status$cmd_duration$git_branch${custom.git_metrics_main_added_deleted}$git_commit$conda$kubernetes"
add_newline = true

[line_break]
# Prompt is one line, not two lines
disabled = false

[hostname]
disabled = false
ssh_only = true
ssh_symbol = 'SSH '
style = 'bold red'
format = "[$hostname $ssh_symbol]($style)"

[username]
disabled = true
format = "[$user]($style) @ "

[shell]
fish_indicator = ""
unknown_indicator = "sh? "
bash_indicator = "bash "
zsh_indicator = "zsh "
powershell_indicator = "psh "
# How to erase if it's only a space?
# format = '[($indicator )]($style)'
# format = '([$indicator]($style) )'
format = '[$indicator]($style)'
style = ""
disabled = false

[custom.git_metrics_main_added_deleted]
when = "test -d .git"
shell = "dash"
# Sample outputs:
# 1 file changed, 2 insertions(+), 2 deletions(-)
# 1 file changed, 2 deletions(-)
# 1 file changed, 2 insertions(+)
command = "git diff main --shortstat | sed 's/.*file.* changed, // ; s/\\([0-9]*\\) insertion/\\1/ ; s/\\([0-9]*\\) deletion/\\1/ ; s/s\\|(\\|)\\|,//g'"
format = " [$symbol($output)]($style)"
style = "bold underline fg:blue"

[directory]
style = "bright-white"
truncation_length = 1
truncation_symbol = ""
[directory.substitutions]
"powerflex_edge_" = ""
"powerflex_cloud_" = ""
"powerflex_" = ""
"central_system" = "CS"
"traffic_manager" = "traffman"
"storage_interface" = "storint"
"storage_simulator" = "storsim"
"edge_device_manager" = "devman"
"presentations" = "pr"
"2022_CognizantFullstackNanodegree_SessionLead" = "2022nd"

[time]
disabled = false
style = "dimmed white"
time_format = "%h %d %R"
format = "[$time]($style) "

[git_branch]
format = "[$symbol$branch]($style) "
style = "bold fg:bright-white"
symbol = ""
truncation_length=14

[git_state]
disabled = true

[git_metrics]
disabled = true
added_style = "bold underline fg:bright-green"
deleted_style = "bold underline fg:blue"

[git_status]
style = "bright-yellow"
format = "([$all_status$ahead_behind]($style) )"
stashed = "S"

[status]
# Show exit code of last command
disabled = false
format = '[\[$status\]]($style) '

[[battery.display]]
threshold = 25

[character]
success_symbol = "[\\$](bold white)"
error_symbol = "[X](bold red)"

[cmd_duration]
style = "bright-yellow"
min_time = 5000
show_milliseconds = false
format = "[$duration]($style) "

[kubernetes]
disabled = true
format = ' [ $context( \($namespace\))]($style)'
style = "fg:#88ddff"
contexts = [
 { context_pattern = "powerflex-((dev|stage|stg|prd)-)?(?P<name>.*)", context_alias = "$name", style = "bright-yellow" },
 { context_pattern = 'gke_.*_(powerflex-*_*)?(?P<var_cluster>[\w-]+)', context_alias = '$var_cluster', style = "bright-yellow" },
 { context_pattern = "kind-(?P<name>.*)", context_alias = "$name" },
]

[custom.machine_architecture]
# Either an odd architecture or an SSH connection
# Check if SSH first since uname can run slow on some machines
when = "[ -n \"$SSH_CLIENT\" ] || [ $(uname -m) != x86_64 ]"
shell = "dash"
command = "uname -m"
format = "[$symbol($output) ]($style)"
style = "bold fg:red"

[git_commit]
commit_hash_length = 4
only_detached = false
tag_disabled = false
format = " [$hash$tag]($style)"
style = "fg:bright-white"

[conda]
ignore_base = false
format = " [$symbol $environment]($style)"
symbol = "ìÜò"
disabled = false

[gcloud]
disabled = true

[package]
format = "[$symbol$version]($style) "
symbol = ""

########## REMOVE "via"
[python]
disabled = true
# Keep up to date with latest default, but omit "via"
style = "white"
format = '[${symbol}${pyenv_prefix}(${version} )(\($virtualenv\) )]($style)'

[rust]
style = "white"
format = "[$symbol($version )]($style)"

[nodejs]
style = "white"
format = "[$symbol($version )]($style)"

[c]
format = '[$symbol($version(-$name) )]($style)'

[ocaml]
# This is a double humped camel!!!!!!!! üê´
# See Perl
style = "white"
format = "[$symbol($version )]($style)"

[perl]
# This is a single humped camel!!!!!!!! üê™
# TIM TOADY
# See OCaml
style = "white"
format = "[$symbol($version )]($style)"

[raku]
# TIM TOADY
format = "[$symbol($version )]($style)"

[elm]
style = "red underline bold"
format = "[$symbol($version )]($style)"

[haskell]
style = "red underline bold"
format = "[$symbol($version )]($style)"

[clojure]
style = "red underline bold"
format = "[$symbol($version )]($style)"

[lua]
format = '[$symbol($version )]($style)'

# The rest of these languages are not often used, but I'll get rid of the 'via' string anyway
[cobol]
format = '[$symbol($version )]($style)'
[crystal]
format = '[$symbol($version )]($style)'
[dart]
format = '[$symbol($version )]($style)'
[elixir]
format = '[$symbol($version )]($style)'
[go]
format = '[$symbol($version )]($style)'
[java]
format = '[$symbol($version )]($style)'
[julia]
format = '[$symbol($version )]($style)'
[kotlin]
format = '[$symbol($version )]($style)'
[php]
format = '[$symbol($version )]($style)'
[nim]
format = '[$symbol($version )]($style)'
[rlang]
format = '[$symbol($version )]($style)'
[ruby]
format = '[$symbol($version )]($style)'
[swift]
format = '[$symbol($version )]($style)'
[vlang]
format = '[$symbol($version )]($style)'
[zig]
format = '[$symbol($version )]($style)'
